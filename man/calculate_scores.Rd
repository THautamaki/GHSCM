% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Utils_for_network_estimation.R
\name{calculate_scores}
\alias{calculate_scores}
\title{Performance scores for network estimation}
\usage{
calculate_scores(cm)
}
\arguments{
\item{cm}{The 2 by 2 confusion matrix calculated using the function \code{conf_matrix()} or
manually created 2 by 2 matrix using following order:
\tabular{cc}{
   \eqn{TP} \tab \eqn{FN}\cr
   \eqn{FP} \tab \eqn{TN}
}}
}
\value{
A data frame, which contains following scores:
\item{ACC}{
   Accuracy, which is \eqn{(TP + TN) / (TP + TN + FN + FP)}.
}
\item{ACC_bal}{
   Balanced accuracy, which is \eqn{(TPR + TNR) / 2}.
}
\item{MCC}{
   Matthews correlation coefficient, which is \eqn{(TP \cdot TN - FP \cdot FN) / \sqrt{(TP + FP) (TP + FP) (TN + FP) (TN + FN)}}.
}
\item{F1}{
   \eqn{F_1}-score, which is \eqn{2(PPV \cdot TPR) / (PPV + TPR)}.
}
\item{TPR}{
   True positive rate (or recall or sensitivity), which is \eqn{TP / (TP + TN)}.
}
\item{TNR}{
   True negative rate (or specificity or selectivity), which is \eqn{TN / (TN + FP)}.
}
\item{PPV}{
   Positive predictive value (or precision), which is \eqn{TP / (TP + FP)}.
}
\item{NPV}{
   Negative predictive value, which is \eqn{TN / (TN + FN)}.
}
\item{FPR}{
   False positive rate (type I error), which is \eqn{1 - TNR}.
}
\item{FNR}{
   False negative rate (type II error), which is \eqn{1 - TPR}.
}
\item{FDR}{
   False discovery rate, which is \eqn{1 - PPV}.
}
\item{FOR}{
   False omission rate, which is \eqn{1 - NPV}.
}
\item{PT}{
   Prevalence threshold, which is \eqn{(\sqrt{TPR \cdot FPR} - FPR) / (TPR - FPR)}.
}
\item{TS}{
   Threat score (or Jaccard index or critical success index (CSI)), which is \eqn{TP / (TP + FN + FP)}.
}
\item{FM}{
   Fowlkes-Mallows index, which is \eqn{\sqrt{PPV \cdot TPR}}.
}
\item{MK}{
   Markedness, which is \eqn{PPV + NPV - 1}.
}
\item{LRp}{
   Positive likelihood ratio, which is \eqn{TPR / FPR}.
}
\item{LRn}{
   Negative likelihood ratio, which is \eqn{FNR / TNR}.
}
}
\description{
This function calculates performance scores for network estimation. The scores are same as binary
classification scores as the adjacency matrices are binary matrices.
}
\examples{
true_adj <- matrix(c(0, 0, 1, 0, 0,
                     0, 0, 1, 1, 0,
                     1, 1, 0, 0, 0,
                     0, 1, 0, 0, 1,
                     0, 0, 0, 1, 0), 5, 5)
est_adj <- matrix(c(0, 1, 1, 0, 0,
                    1, 0, 0, 1, 0,
                    1, 0, 0, 0, 1,
                    0, 1, 0, 0, 1,
                    0, 0, 1, 1, 0), 5, 5)
cm <- conf_matrix(true_adj, est_adj)
calculate_scores(cm)
}
\references{
Sammut, C., & Webb, G. I. (2017). \emph{Encyclopedia of machine learning and data mining.}
 Springer Publishing Company, Incorporated.
 
 Powers, D. M. (2020). Evaluation: from precision, recall and F-measure to ROC, informedness,
 markedness and correlation. \emph{arXiv preprint arXiv:2010.16061.}
 
 Chicco, D., & Jurman, G. (2020). The advantages of the Matthews correlation coefficient (MCC)
 over F1 score and accuracy in binary classification evaluation. \emph{BMC genomics, 21,} 1-13.
 
 Balayla, J. (2020). Prevalence threshold (\eqn{\phi e}) and the geometry of screening curves.
 \emph{Plos one, 15}(10), e0240215.
}
